Description: Add Network related changes.

Parameters:
  ExerciseName:
    Type: String
    Description: Tag name for our resources
    Default: project-web-app

  EnvironmentName:
    Type: String
    Description: Tag name for our environment
    Default: local-dev

  PublicCidr1:
    Type: String
    Description: Public CIDR1 block
    Default: 10.6.0.0/24

  PublicCidr2:
    Type: String
    Description: Public CIDR2 block
    Default: 10.6.2.0/24

  PrivateCidr1:
    Type: String
    Description: Private Subnet 1 CIDR Block
    Default: 10.6.1.0/24

  PrivateCidr2:
    Type: String
    Description: Private Subnet 2 CIDR Block
    Default: 10.6.3.0/24

  VpcCidr:
    Type: String
    Description: VPC CIDR Block
    Default: 10.6.0.0/16

Resources:
  # Add your resources here
  VPC: 
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      Tags: 
      - Key: Name 
        Value: !Ref ExerciseName

  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicCidr1
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub "${ExerciseName}-public1"

  PrivateSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateCidr1 #
      Tags: 
        - Key: Name 
          Value: !Sub "${ExerciseName}-private1"

  PublicSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicCidr2 #
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub "${ExerciseName}-public2"
          
  PrivateSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateCidr2 #
      Tags: 
        - Key: Name 
          Value: !Sub "${ExerciseName}-private2"
       
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref ExerciseName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Routes

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2     

  DefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties: 
      Domain: VPC

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: VPC

  NatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2    
  
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Routes

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Routes

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1   

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2   

Outputs:
  VPC: 
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${ExerciseName}-vpc-id

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${ExerciseName}-public-subnets

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${ExerciseName}-private-subnets

  PublicSubnet1:
    Description: A reference to the public subnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ExerciseName}-public-subnet1

  PrivateSubnet1:
    Description: A reference to the private subnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${ExerciseName}-private-subnet1

  PublicSubnet2:
    Description: A reference to the public subnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ExerciseName}-public-subnet2

  PrivateSubnet2:
    Description: A reference to the private subnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${ExerciseName}-private-subnet2